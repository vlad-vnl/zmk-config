/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

&led_strip {
    chain-length = <23>;
};

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <185>;
};

&sl {
    release-after-ms = <1000>;
};

&sk {
    release-after-ms = <2000>;
    quick-release;
};

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};


/ { 
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp ESC>;
            layers = <0>;
        };
        
            combo_return {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RETURN>;
            layers = <0>;
        };
        
        combo_save {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LCMD(S)>;
            layers = <0>;
        };
        
        combo_copy {
            timeout-ms = <50>;
            key-positions = <13 22>;
            bindings = <&kp LCMD(C)>;
            layers = <0>;
        };
        
        combo_paste {
            timeout-ms = <50>;
            key-positions = <12 23>;
            bindings = <&kp LCMD(P)>;
            layers = <0>;
        };
        
        combo_bol {
            timeout-ms = <50>;
            key-positions = <6 7>;
            bindings = <&kp LCMD(LEFT)>;
            layers = <0>;
        };
        
        combo_eol {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp LCMD(RIGHT)>;
            layers = <0>;
        };

        combo_word_back {
            timeout-ms = <50>;
            key-positions = <7 16>;
            bindings = <&kp LALT(LEFT)>;
            layers = <0>;
        };

        combo_word_forward {
            timeout-ms = <50>;
            key-positions = <7 18>;
            bindings = <&kp LALT(RIGHT)>;
            layers = <0>;
        };

        combo_home {
            timeout-ms = <50>;
            key-positions = <6 17>;
            bindings = <&kp HOME>;
            layers = <0>;
        };

        combo_end {
            timeout-ms = <50>;
            key-positions = <8 17>;
            bindings = <&kp END>;
            layers = <0>;
        };

        combo_page_down {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp PAGE_DOWN>;
            layers = <0>;
        };

        combo_page_up {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp PAGE_UP>;
            layers = <0>;
        };

        combo_focus_left {
            timeout-ms = <50>;
            key-positions = <17 26>;
            bindings = <&kp LC(H)>;
            layers = <0>;
        };

        combo_focus_right {
            timeout-ms = <50>;
            key-positions = <17 28>;
            bindings = <&kp LC(L)>;
            layers = <0>;
        };

        combo_tab_next {
            timeout-ms = <50>;
            key-positions = <2 13>;
            bindings = <&kp LC(TAB)>;
            layers = <0>;
        };

        combo_tab_previous {
            timeout-ms = <50>;
            key-positions = <2 11>;
            bindings = <&kp LC(LS(TAB))>;
            layers = <0>;
        };

        combo_tab_swap_left {
            timeout-ms = <50>;
            key-positions = <1 12>;
            bindings = <&kp LC(LS(PAGE_UP))>;
            layers = <0>;
        };

        combo_tab_swap_right {
            timeout-ms = <50>;
            key-positions = <3 12>;
            bindings = <&kp LC(LS(PAGE_DOWN))>;
            layers = <0>;
        };
        
        combo_panel_down {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp LCMD(LC(LA(J)))>;
            layers = <0>;
        };
        
        combo_file_explorer {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp LCMD(LS(E))>;
            layers = <0>;
        };
        
        combo_open_file {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp LCMD(P)>;
            layers = <0>;
        };
        
        combo_close_panel {
            timeout-ms = <50>;
            key-positions = <1 10>;
            bindings = <&kp LCMD(B)>;
            layers = <0>;
        };
        
        combo_www_back {
            timeout-ms = <50>;
            key-positions = <1 13>;
            bindings = <&kp LCMD(LEFT_BRACKET)>;
            layers = <0>;
        };
        
        combo_www_forward {
            timeout-ms = <50>;
            key-positions = <13 21>;
            bindings = <&kp LCMD(RIGHT_BRACKET)>;
            layers = <0>;
        };
        
        combo_switch_win {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp LCMD(GRAVE)>;
            layers = <0>;
        };
        
        combo_search {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LCMD(LS(F))>;
            layers = <0>;
        };
        
        combo_inspect {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp LCMD(LA(I))>;
            layers = <0>;
        };
        
        combo_select_element {
            timeout-ms = <50>;
            key-positions = <11 20>;
            bindings = <&kp LCMD(LS(C))>;
            layers = <0>;
        };
        
        combo_terminal {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp LC(GRAVE)>;
            layers = <0>;
        };
        
        combo_new_terminal_split {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&kp LCMD(BACKSLASH)>;
            layers = <0>;
        };
        
        combo_open_definition {
            timeout-ms = <50>;
            key-positions = <21 23>;
            bindings = <&kp LC(LS(D))>;
            layers = <0>;
        };
        
        combo_live_share {
            timeout-ms = <50>;
            key-positions = <12 21>;
            bindings = <&kp LC(LA(LS(W)))>;
            layers = <0>;
        };
        
        combo_git {
            timeout-ms = <50>;
            key-positions = <11 22>;
            bindings = <&kp LC(LS(G))>;
            layers = <0>;
        };
    };

    macros {
        paste_new_incog_win: paste_new_incog_win {
            label = "paste_new_incog_win";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCMD(LSFT)>
                , <&macro_tap &kp N>
                , <&macro_release &kp LCMD(LSFT)>
                , <&macro_press &kp LCMD>
                , <&macro_tap &kp V>
                , <&macro_release &kp LCMD>
                , <&macro_tap &kp RETURN>
                ;
        };

        layer0: layer0 {
            label = "layer0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings 
                = <&macro_tap &to 0>
                , <&macro_tap &rgb_ug RGB_COLOR_HSB(0,0,50)>
                ;
        };

        layer1: layer1 {
            label = "layer1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings 
                = <&macro_tap &sl 1>
                , <&macro_tap &rgb_ug RGB_COLOR_HSB(355,100,50)>
                ;
        };

        layer2: layer2 {
            label = "layer2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings 
                = <&macro_tap &sl 2>
                , <&macro_tap &rgb_ug RGB_COLOR_HSB(120,100,50)>
                ;
        };

        layer3: layer3 {
            label = "layer3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings 
                = <&macro_tap &to 3>
                , <&macro_tap &rgb_ug RGB_COLOR_HSB(215,100,50)>
                ;
        };
    };
};

/ {
    behaviors {
        td_next_prev: tap_dance_next_previous {
            compatible = "zmk, behavior-tap-dance";
            label = "TAP_DANCE_NEXT_PREVIOUS";
            #binding-cells = <0>;
            tapping_term_ms = <200>;
            bindings = <&kp C_NEXT>, <&kp C_PREV>;
        };

        td_lights_toggle: tap_dance_lights_toggle {
            compatible = "tap_dance_lights_toggle";
            label = "TAP_DANCE_NEXT_PREVIOUS";
            #binding-cells = <0>;
            tapping_term_ms = <200>;
            bindings = <&rgb_ug RGB_TOG>, <&rgb_ug RGB_EFF>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
                
        default_layer {
            bindings = <
                &kp Q &kp W &kp F &kp P &kp B 						  &kp J &kp L &kp U &kp Y &kp QUOT 
                &kp A &kp R &kp S &kp T &kp G 			        	  &kp M &kp N &kp E &kp I &kp O
                &mt LC(LA(LSHIFT)) Z &mt LALT X &mt LCMD C &kp D &kp V    &kp K &kp H &mt LCMD CMMA &mt LALT DOT &mt LC(LA(LSHIFT)) SLASH
                                &layer1 &sk LSFT 	 			          &mt RCTRL SPC &layer2 
            >;
		};

        left_layer {
            bindings = <
                &kp ESC             &mt LG(LS(4)) LG(LS(5)) &kp LG(LC(SPC)) &paste_new_incog_win &trans 	                &kp PLUS &kp NUM_7 &kp NUM_8 &kp NUM_9 &trans 
                &mt LSFT RET        &layer3                 &kp DEL              &kp BSPC           &td_next_prev	            &kp MINUS &kp NUM_4  &kp NUM_5 &kp NUM_6 &kp RET 
                &kp LG(LA((Z)))   &mt LALT C_VOL_DN       &mt LCMD C_VOL_UP    &kp TAB              &mt C_PP K_MUTE           &kp STAR &kp NUM_1 &kp NUM_2 &kp NUM_3  &kp NUM_0 
                                                                                &layer0              &trans  					&trans   &layer0
            >;
		};
		
		right_layer {
            bindings = <
                &kp TILDE &kp EXCL &kp LBRC  &kp RBRC  &kp BSLH    			        &caps_word  &kp CARET &kp DOLLAR &kp EQUAL &kp GRAVE 
                &mt LCTRL RET &kp UNDER  &kp LPAR  &kp RPAR  &kp PERCENT 			&kp LEFT &kp UP  &kp DOWN  &kp RIGHT &kp SEMICOLON
                &kp PLUS  &mt LALT AT &mt LCMD LBKT &kp RBKT   &kp PIPE    			&kp AMPERSAND &kp STAR &mt LCMD HASH &mt LALT MINUS &kp COLON
                                    &layer0 &trans  				                    &trans &layer0 
            >;
		};	
		
		tri_layer {
            bindings = <
                &kp ESC             &kp LC(LS(PLUS))   &kp LC(LS(LEFT))           &kp LC(LS(DOWN))           &trans 			                &bl BL_TOG &trans   &kp UP      &trans      &trans
                &kp LC(LS(RET)) &kp LC(LS(MINUS))  &kp LC(LA(LS(LEFT)))    &kp LC(LA(LS(RIGHT)))  &kp C_BRIGHTNESS_INC  			&bl BL_INC &kp LEFT &kp DOWN    &kp RIGHT   &trans 
                &kp LC(LS(BSPC)) &trans                &kp LC(LS(UP))                 &kp LC(LS(RIGHT))     &kp C_BRIGHTNESS_DEC             &bl BL_DEC &td_lights_toggle   &bt BT_PRV  &bt BT_NXT &bt BT_CLR   
                                                                                                &layer0  &trans                                             &trans &layer0 
            >;  
		};	
        
	};
};
